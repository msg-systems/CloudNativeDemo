<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
	</parent>
	<groupId>de.msg</groupId>
	<artifactId>cn-infra-vortrag</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>cn-infra-vortrag</name>
	<description>CN App for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<api.package>de.msg.cn.app.api</api.package>

		<mapstruct.version>1.5.3.Final</mapstruct.version>
		<lombok.version>1.18.24</lombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<openapitools.version>0.2.4</openapitools.version>
		<springfox-swagger2.version>3.0.0</springfox-swagger2.version>
		<javax.validation.version>2.0.1.Final</javax.validation.version>
		<springdoc-openapi-ui.version>1.6.14</springdoc-openapi-ui.version>
		<archunit.version>1.0.1</archunit.version>
		<postgresql.version>42.5.2</postgresql.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${openapitools.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-swagger2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc-openapi-ui.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-core</artifactId>
			<version>2.2.8</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5</artifactId>
			<version>${archunit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>6.3.0</version>
				<executions>
					<execution>
						<id>spring</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/api.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<configOptions>
								<apiPackage>${api.package}</apiPackage>
								<modelPackage>${api.package}.model</modelPackage>
								<interfaceOnly>true</interfaceOnly>
								<useSpringBoot3>true</useSpringBoot3>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>asciidoc</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/api.yaml</inputSpec>
							<generatorName>asciidoc</generatorName>
							<configOptions>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>html</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/api.yaml</inputSpec>
							<generatorName>html</generatorName>
							<configOptions>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<version>5.0.0</version>
				<executions>
					<execution>
						<id>generate-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<commitIdGenerationMode>full</commitIdGenerationMode>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.1</version>
				<configuration>
					<workingDirectory>${basedir}/src/main/frontend</workingDirectory>
					<installDirectory>target</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install-node-and-yarn</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
						<configuration>
							<nodeVersion>v18.13.0</nodeVersion>
							<yarnVersion>v1.22.19</yarnVersion>
						</configuration>
					</execution>
					<execution>
						<id>yarn-install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
					</execution>
					<execution>
						<id>yarn-build</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>build</arguments>
						</configuration>
					</execution>
					<execution>
						<id>frontend-unit-tests</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<arguments>test:unit</arguments>
						</configuration>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<phase>integration-test</phase>
						<configuration>
							<arguments>test:e2e --headless --url http://localhost:${server.port}</arguments>
							<!-- if the test fails post-integration-test of spring boot maven plugin is not executed
							     thus the started backend service is never shut down, beware when testing locally
							     in the cloud the build container is simply discarded afterwards, so no problem -->
							<!--testFailureIgnore>true</testFailureIgnore-->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>
							-Amapstruct.defaultComponentModel=spring
						</arg>
						<arg>
							-Amapstruct.defaultInjectionStrategy=constructor
						</arg>
						<arg>
							-Amapstruct.unmappedTargetPolicy=ERROR
						</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>reserve-container-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<portNames>
								<portName>server.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<server.port>${server.port}</server.port>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<arguments>
								<argument>--server.port=${server.port}</argument>
								<argument>--management.server.port=${server.port}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.40.3</version>
				<extensions>true</extensions>
				<configuration>
					<images>
						<image>
							<name>${ECR_REPO}</name>
							<build>
								<from>public.ecr.aws/docker/library/alpine:3.17</from>
								<imagePullPolicy>Always</imagePullPolicy>
								<runCmds>
									<runCmd>apk --no-cache add bash coreutils curl openjdk17-jdk ttf-dejavu</runCmd>
									<runCmd>curl -sSL https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem -o /usr/local/share/ca-certificates/rds-ca-2019-root.pem</runCmd>
									<runCmd>update-ca-certificates</runCmd>
									<runCmd>keytool -import -noprompt -cacerts -storepass changeit -file /usr/local/share/ca-certificates/rds-ca-2019-root.pem -alias rdsCa2019root -trustcacerts</runCmd>
								</runCmds>
								<assemblies>
									<assembly>
										<descriptorRef>artifact</descriptorRef>
										<targetDir>/app</targetDir>
									</assembly>
								</assemblies>
								<optimise>false</optimise>
								<workdir>/app</workdir>
								<cmd>
									<exec>
										<arg>java</arg>
										<arg>-jar</arg>
										<arg>/app/${project.artifactId}-${project.version}.jar</arg>
									</exec>
								</cmd>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
